emqx_gateway_api_listeners {

    list_listeners {
        desc {
            en: """Gets a list of gateway listeners. This interface returns all the configs of the listener (including the authenticator on that listener), as well as the status of that listener running in the cluster."""
            zh: """获取网关监听器列表。该接口会返回监听器所有的配置（包括该监听器上的认证器），同时也会返回该监听器在集群中运行的状态。"""
        }
    }

    add_listener {
        desc {
            en: """Create the gateway listener.</br>
Note: For listener types not supported by a gateway, this API returns `400: BAD_REQUEST`."""
            zh: """为指定网关添加监听器。</br>
注：对于某网关不支持的监听器类型，该接口会返回 `400: BAD_REQUEST`。"""
        }
    }

    get_listener {
        desc {
            en: """Get the gateway listener configs"""
            zh: """获取指定网关监听器的配置。"""
        }
    }

    delete_listener {
        desc {
            en: """Delete the gateway listener. All connected clients under the deleted listener will be disconnected."""
            zh: """删除指定监听器。被删除的监听器下所有已连接的客户端都会离线。"""
        }
    }

    update_listener {
        desc {
            en: """Update the gateway listener. The listener being updated performs a restart and all clients connected to that listener will be disconnected."""
            zh: """更新某网关监听器的配置。被更新的监听器会执行重启，所有已连接到该监听器上的客户端都会被断开。"""
        }
    }

    get_listener_authn {
        desc {
            en: """Get the listener's authenticator configs."""
            zh: """获取监听器的认证器配置。"""
        }
    }

    add_listener_authn {
        desc {
            en: """Enable authenticator for specified listener for client authentication.</br>
When authenticator is enabled for a listener, all clients connecting to that listener will use that authenticator for authentication."""
            zh: """为指定监听器开启认证器以实现客户端认证的能力。</br>
当某一监听器开启认证后，所有连接到该监听器的客户端会使用该认证器进行认证。"""
        }
    }

    update_listener_authn {
        desc {
            en: """Update authenticator configs for the listener, or disable/enable it."""
            zh: """更新指定监听器的认证器配置，或停用/启用该认证器。"""
        }
    }

    delete_listener_authn {
        desc {
            en: """Remove authenticator for the listener."""
            zh: """移除指定监听器的认证器。"""
        }
    }

    list_users {
        desc {
            en: """Get the users for the authenticator (only supported by <code>built_in_database</code>)"""
            zh: """获取用户列表（仅支持 built_in_database 类型的认证器）"""
        }
    }

    add_user {
        desc {
            en: """Add user for the authenticator (only supports built_in_database)"""
            zh: """添加用户（仅支持 built_in_database 类型的认证器）"""
        }
    }

    get_user {
        desc {
            en: """Get user info from the gateway authenticator (only supports built_in_database)"""
            zh: """获取用户信息（仅支持 built_in_database 类型的认证器）"""
        }
    }

    update_user {
        desc {
            en: """Update the user info for the gateway authenticator (only supports built_in_database)"""
            zh: """更新用户信息（仅支持 built_in_database 类型的认证器）"""
        }
    }

    delete_user {
        desc {
            en: """Delete the user for the gateway authenticator (only supports built_in_database)"""
            zh: """删除用户（仅支持 built_in_database 类型的认证器）"""
        }
    }

    import_users {
        desc {
            en: """Import users into the gateway authenticator (only supports built_in_database)"""
            zh: """导入用户（仅支持 built_in_database 类型的认证器）"""
        }
    }

    listener_id {
        desc {
            en: """Listener ID"""
            zh: """监听器 ID"""
        }
    }

    listener_status {
        desc {
            en: """listener status """
            zh: """监听器状态"""
        }
    }

    listener_node_status {
        desc {
            en: """listener status of each node in the cluster"""
            zh: """监听器在集群中每个节点上的状态"""
        }
    }

    node {
        desc {
            en: """Node Name"""
            zh: """节点名称"""
        }
    }

    current_connections {
        desc {
            en: """Current Connections"""
            zh: """当前连接数"""
        }
    }
}
